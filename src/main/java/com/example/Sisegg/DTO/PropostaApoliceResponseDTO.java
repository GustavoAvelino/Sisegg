package com.example.Sisegg.DTO;

import java.util.List;
import java.util.stream.Collectors;
import com.example.Sisegg.models.*;

public record PropostaApoliceResponseDTO(
    Long id,
    String nrProposta,
    String nrApolice,
    String nrEndosso,
    Long corretoraId,
    String corretoraNome,
    Long seguradoraId,
    String seguradoraNome,
    Long clienteId,
    String clienteNome,
    Long produtorId,
    String produtorNome,
    Long gradeComissaoId,
    String gradeComissaoNome,
    String dataInicioVigencia,
    String dataFimVigencia,
    String tipo,
    String dataEmissaoApolice,
    String apoliceEfetivadaEm,
    Double comissaoPercentual,
    Double descontoPercentual,
    int quantidadeParcelas,
    String dataPrimeiroPagamento,
    String dataBaseParcelas,
    Double valorPrimeiroPagamento,
    Double premioLiquido,
    Double premioTotal,
    String motivoCancelamentoRecusa,
    String dataCancelamentoRecusa,
    String observacoes,
    String status,
    String motivoEndosso,
    boolean cancelado,
    boolean recusado,
    boolean endossado,
    List<ParcelaPagamentoDTO> parcelas,  // Parcelas de pagamento
    List<Veiculo> veiculos,
    List<AnexoProposta> anexos,
    List<ParcComissaoDocResponseDTO> comissoes  // Parcelas de comissão (documentos)
) {
    // Construtor automático que converte a entidade para DTO sem comissões (vazio)
    public PropostaApoliceResponseDTO(PropostaApolice proposta) {
        this(
            proposta.getId(),
            proposta.getNrProposta(),
            proposta.getNrApolice(),
            proposta.getNrEndosso(),
            proposta.getCorretora().getId(),
            proposta.getCorretora().getNome(),
            proposta.getSeguradora().getId(),
            proposta.getSeguradora().getNome(),
            proposta.getCliente().getId(),
            proposta.getCliente().getNome(),
            proposta.getProdutor().getId(),
            proposta.getProdutor().getNome(),
            proposta.getGradeComissao().getId(),
            proposta.getGradeComissao().getNome(),
            proposta.getDataInicioVigencia(),
            proposta.getDataFimVigencia(),
            proposta.getTipo(),
            proposta.getDataEmissaoApolice(),
            proposta.getApoliceEfetivadaEm(),
            proposta.getComissaoPercentual(),
            proposta.getDescontoPercentual(),
            proposta.getQuantidadeParcelas(),
            proposta.getDataPrimeiroPagamento(),
            proposta.getDataBaseParcelas(),
            proposta.getValorPrimeiroPagamento(),
            proposta.getPremioLiquido(),
            proposta.getPremioTotal(),
            proposta.getMotivoCancelamentoRecusa(),
            proposta.getDataCancelamentoRecusa(),
            proposta.getObservacoes(),
            proposta.getStatus(),
            proposta.getMotivoEndosso(),
            proposta.isCancelado(),
            proposta.isRecusado(),
            proposta.isEndossado(),
            proposta.getParcelas().stream().map(ParcelaPagamentoDTO::new).collect(Collectors.toList()),
            proposta.getVeiculos(),
            proposta.getAnexos(),
            List.of() // comissões vazias por padrão
        );
    }

    // Construtor manual para quando já temos as listas convertidas, incluindo as comissões
    public PropostaApoliceResponseDTO(PropostaApolice proposta, 
                                      List<ParcelaPagamentoDTO> parcelasDTO, 
                                      List<Veiculo> veiculos, 
                                      List<AnexoProposta> anexos,
                                      List<ParcComissaoDocResponseDTO> comissoesDTO) {
        this(
            proposta.getId(),
            proposta.getNrProposta(),
            proposta.getNrApolice(),
            proposta.getNrEndosso(),
            proposta.getCorretora().getId(),
            proposta.getCorretora().getNome(),
            proposta.getSeguradora().getId(),
            proposta.getSeguradora().getNome(),
            proposta.getCliente().getId(),
            proposta.getCliente().getNome(),
            proposta.getProdutor().getId(),
            proposta.getProdutor().getNome(),
            proposta.getGradeComissao().getId(),
            proposta.getGradeComissao().getNome(),
            proposta.getDataInicioVigencia(),
            proposta.getDataFimVigencia(),
            proposta.getTipo(),
            proposta.getDataEmissaoApolice(),
            proposta.getApoliceEfetivadaEm(),
            proposta.getComissaoPercentual(),
            proposta.getDescontoPercentual(),
            proposta.getQuantidadeParcelas(),
            proposta.getDataPrimeiroPagamento(),
            proposta.getDataBaseParcelas(),
            proposta.getValorPrimeiroPagamento(),
            proposta.getPremioLiquido(),
            proposta.getPremioTotal(),
            proposta.getMotivoCancelamentoRecusa(),
            proposta.getDataCancelamentoRecusa(),
            proposta.getObservacoes(),
            proposta.getStatus(),
            proposta.getMotivoEndosso(),
            proposta.isCancelado(),
            proposta.isRecusado(),
            proposta.isEndossado(),
            parcelasDTO,
            veiculos,
            anexos,
            comissoesDTO
        );
    }
}
